{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "adminUsername": {
            "type": "string",
            "metadata": {
              "description": "Name for the docker VM administrator."
            }
        },
        "adminPassword": {
            "type": "securestring",
            "metadata": {
              "description": "Password for the docker VM administrator."
            }
        },
        "ckanuser": {
            "type": "string",
            "metadata": {
              "description": "Name for the CKAN administrator."
            }
        },
        "ckanemail": {
            "type": "string",
            "metadata": {
              "description": "Email for the CKAN administrator."
            }
        },
        "ckanpassword": {
            "type": "securestring",
            "metadata": {
              "description": "Password for the CKAN administrator."
            }
        },
        "location": {
            "type": "string",
            "defaultValue": "westeurope"
        }
    },
  "variables": {
    "virtualMachines_docker_host_name": "[concat(resourceGroup().name, '-docker-host')]",
    "networkInterfaces_name": "[concat(resourceGroup().name, '-network-interface')]",
    "publicIPAddresses_docker_ip_name": "[concat(resourceGroup().name, '-ip')]",
    "networkSecurityGroups_nsg_name": "[concat(resourceGroup().name, '-nsg')]",
    "virtualNetworks_vnet_name": "[concat(resourceGroup().name, '-vnet')]",
    "storage_name": "[concat(replace(resourceGroup().name, '-', ''), 'storage')]",
    "eventhub_namespace_name": "[concat(resourceGroup().name, '-eventhubs')]",
    "iothub_name": "[concat(resourceGroup().name, '-iothub')]",
    "plan_name": "[concat(parameters('location'), 'Plan')]",

    "resourceGroupId": "[concat(subscription().id, '/resourceGroups/', concat(resourceGroup().name, '/'))]",
    "eventhubNamespaceId": "[concat(variables('resourceGroupId'), 'providers/Microsoft.EventHub/namespaces/', variables('eventhub_namespace_name'))]",
    "networkSecurityGroupId": "[concat(variables('resourceGroupId'), 'providers/Microsoft.Network/networkSecurityGroups/', variables('networkSecurityGroups_nsg_name'))]",
    "networkInterfaceId": "[concat(variables('resourceGroupId'), 'providers/Microsoft.Network/networkInterfaces/', variables('networkInterfaces_name'))]",
    "publicIPId": "[concat(variables('resourceGroupId'), 'providers/Microsoft.Network/publicIPAddresses/',variables('publicIPAddresses_docker_ip_name'))]",
    "storageAccountId": "[concat(variables('resourceGroupId'), 'providers/Microsoft.Storage/storageAccounts/',variables('storage_name'))]",
    "subnetId": "[concat(variables('resourceGroupId'), 'providers/Microsoft.Network/virtualNetworks/', variables('virtualNetworks_vnet_name'), '/subnets/default')]",
    "virtualNetworkId": "[concat(variables('resourceGroupId'), 'providers/Microsoft.Network/virtualNetworks/', variables('virtualNetworks_vnet_name'))]",

    "dnsname": "[concat(resourceGroup().name, '.westeurope.cloudapp.azure.com')]"
  },
    "resources": [
        {
                      "name": "[variables('storage_name')]",
                      "type": "Microsoft.Storage/storageAccounts",
                      "apiVersion": "2018-07-01",
                      "location": "[parameters('location')]",
                      "kind": "StorageV2",
                      "sku": {
                        "name": "Standard_LRS"
                      },
                      "properties": {},
                      "dependsOn": []
                    },
                    {
                      "type": "Microsoft.Compute/virtualMachines",
                      "name": "[variables('virtualMachines_docker_host_name')]",
                      "apiVersion": "2017-12-01",
                      "location": "[parameters('location')]",
                      "scale": null,
                      "properties": {
                        "hardwareProfile": {
                          "vmSize": "Standard_D4s_v3"
                        },
                        "storageProfile": {
                          "imageReference": {
                            "publisher": "Canonical",
                            "offer": "UbuntuServer",
                            "sku": "16.04-LTS",
                            "version": "latest"
                          },
                          "osDisk": {
                            "osType": "Linux",
                            "name": "[concat(variables('virtualMachines_docker_host_name'),'_OsDisk')]",
                            "createOption": "FromImage",
                            "caching": "ReadWrite",
                            "managedDisk": {
                              "storageAccountType": "Premium_LRS"
                            },
                            "diskSizeGB": 30
                          },
                          "dataDisks": []
                        },
                        "osProfile": {
                          "computerName": "[variables('virtualMachines_docker_host_name')]",
                          "adminUsername": "[parameters('adminUsername')]",
                          "adminPassword": "[parameters('adminPassword')]"
                        },
                        "networkProfile": {
                          "networkInterfaces": [
                            {
                              "id": "[variables('networkInterfaceId')]"
                            }
                          ]
                        }
                      },
                      "resources": [
                        {
                          "type": "extensions",
                          "name": "CustomScriptExtension",
                          "apiVersion": "2017-03-30",
                          "location": "[parameters('location')]",
                          "dependsOn": [
                            "[variables('virtualMachines_docker_host_name')]"
                          ],
                          "properties": {
                            "publisher": "Microsoft.Azure.Extensions",
                            "type": "CustomScript",
                            "typeHandlerVersion": "2.0",
                            "autoUpgradeMinorVersion": true,
                            "settings": {
                              "fileUris": [
                                "https://raw.githubusercontent.com/jenlisabeth/Template-testing/master/script.sh"
                              ]
                            },
                            "protectedSettings": {
                              "commandToExecute": "[concat('sudo sh script.sh ', resourceGroup().name, ' ', variables('dnsname'), ' localhost ', parameters('ckanuser'), ' ', parameters('ckanemail'), ' ', parameters('ckanpassword'), ' :8096')]"
                            }
                          }
                        }
                      ],
                      "dependsOn": [
                        "[variables('networkInterfaceId')]"
                      ]
                    },
                    {
                      "type": "Microsoft.Network/networkSecurityGroups",
                      "name": "[variables('networkSecurityGroups_nsg_name')]",
                      "apiVersion": "2018-02-01",
                      "location": "[parameters('location')]",
                      "scale": null,
                      "properties": {
                        "securityRules": [
                          {
                            "name": "apache2",
                            "properties": {
                              "protocol": "*",
                              "sourcePortRange": "*",
                              "destinationPortRange": "80",
                              "sourceAddressPrefix": "*",
                              "destinationAddressPrefix": "*",
                              "access": "Allow",
                              "priority": 105,
                              "direction": "Inbound",
                              "sourcePortRanges": [],
                              "destinationPortRanges": [],
                              "sourceAddressPrefixes": [],
                              "destinationAddressPrefixes": []
                            }
                          },
                          {
                            "name": "CKAN",
                            "properties": {
                              "provisioningState": "Succeeded",
                              "protocol": "*",
                              "sourcePortRange": "*",
                              "destinationPortRange": "8096",
                              "sourceAddressPrefix": "*",
                              "destinationAddressPrefix": "*",
                              "access": "Allow",
                              "priority": 106,
                              "direction": "Inbound",
                              "sourcePortRanges": [],
                              "destinationPortRanges": [],
                              "sourceAddressPrefixes": [],
                              "destinationAddressPrefixes": []
                            }
                          },
                          {
                            "name": "Orion",
                            "properties": {
                              "provisioningState": "Succeeded",
                              "protocol": "*",
                              "sourcePortRange": "*",
                              "destinationPortRange": "8091",
                              "sourceAddressPrefix": "*",
                              "destinationAddressPrefix": "*",
                              "access": "Allow",
                              "priority": 107,
                              "direction": "Inbound",
                              "sourcePortRanges": [],
                              "destinationPortRanges": [],
                              "sourceAddressPrefixes": [],
                              "destinationAddressPrefixes": []
                            }
                          },
                          {
                            "name": "default-allow-ssh",
                            "properties": {
                              "provisioningState": "Succeeded",
                              "protocol": "TCP",
                              "sourcePortRange": "*",
                              "destinationPortRange": "22",
                              "sourceAddressPrefix": "*",
                              "destinationAddressPrefix": "*",
                              "access": "Allow",
                              "priority": 100,
                              "direction": "Inbound",
                              "sourcePortRanges": [],
                              "destinationPortRanges": [],
                              "sourceAddressPrefixes": [],
                              "destinationAddressPrefixes": []
                            }
                          }
                        ],
                        "defaultSecurityRules": [
                          {
                            "name": "AllowVnetInBound",
                            "properties": {
                              "description": "Allow inbound traffic from all VMs in VNET",
                              "protocol": "*",
                              "sourcePortRange": "*",
                              "destinationPortRange": "*",
                              "sourceAddressPrefix": "VirtualNetwork",
                              "destinationAddressPrefix": "VirtualNetwork",
                              "access": "Allow",
                              "priority": 65000,
                              "direction": "Inbound",
                              "sourcePortRanges": [],
                              "destinationPortRanges": [],
                              "sourceAddressPrefixes": [],
                              "destinationAddressPrefixes": []
                            }
                          },
                          {
                            "name": "AllowAzureLoadBalancerInBound",
                            "properties": {
                              "provisioningState": "Succeeded",
                              "description": "Allow inbound traffic from azure load balancer",
                              "protocol": "*",
                              "sourcePortRange": "*",
                              "destinationPortRange": "*",
                              "sourceAddressPrefix": "AzureLoadBalancer",
                              "destinationAddressPrefix": "*",
                              "access": "Allow",
                              "priority": 65001,
                              "direction": "Inbound",
                              "sourcePortRanges": [],
                              "destinationPortRanges": [],
                              "sourceAddressPrefixes": [],
                              "destinationAddressPrefixes": []
                            }
                          },
                          {
                            "name": "DenyAllInBound",
                            "properties": {
                              "provisioningState": "Succeeded",
                              "description": "Deny all inbound traffic",
                              "protocol": "*",
                              "sourcePortRange": "*",
                              "destinationPortRange": "*",
                              "sourceAddressPrefix": "*",
                              "destinationAddressPrefix": "*",
                              "access": "Deny",
                              "priority": 65500,
                              "direction": "Inbound",
                              "sourcePortRanges": [],
                              "destinationPortRanges": [],
                              "sourceAddressPrefixes": [],
                              "destinationAddressPrefixes": []
                            }
                          },
                          {
                            "name": "AllowVnetOutBound",
                            "properties": {
                              "provisioningState": "Succeeded",
                              "description": "Allow outbound traffic from all VMs to all VMs in VNET",
                              "protocol": "*",
                              "sourcePortRange": "*",
                              "destinationPortRange": "*",
                              "sourceAddressPrefix": "VirtualNetwork",
                              "destinationAddressPrefix": "VirtualNetwork",
                              "access": "Allow",
                              "priority": 65000,
                              "direction": "Outbound",
                              "sourcePortRanges": [],
                              "destinationPortRanges": [],
                              "sourceAddressPrefixes": [],
                              "destinationAddressPrefixes": []
                            }
                          },
                          {
                            "name": "AllowInternetOutBound",
                            "properties": {
                              "provisioningState": "Succeeded",
                              "description": "Allow outbound traffic from all VMs to Internet",
                              "protocol": "*",
                              "sourcePortRange": "*",
                              "destinationPortRange": "*",
                              "sourceAddressPrefix": "*",
                              "destinationAddressPrefix": "Internet",
                              "access": "Allow",
                              "priority": 65001,
                              "direction": "Outbound",
                              "sourcePortRanges": [],
                              "destinationPortRanges": [],
                              "sourceAddressPrefixes": [],
                              "destinationAddressPrefixes": []
                            }
                          },
                          {
                            "name": "DenyAllOutBound",
                            "properties": {
                              "provisioningState": "Succeeded",
                              "description": "Deny all outbound traffic",
                              "protocol": "*",
                              "sourcePortRange": "*",
                              "destinationPortRange": "*",
                              "sourceAddressPrefix": "*",
                              "destinationAddressPrefix": "*",
                              "access": "Deny",
                              "priority": 65500,
                              "direction": "Outbound",
                              "sourcePortRanges": [],
                              "destinationPortRanges": [],
                              "sourceAddressPrefixes": [],
                              "destinationAddressPrefixes": []
                            }
                          }
                        ]
                      },
                      "dependsOn": []
                    },
                    {
                      "type": "Microsoft.Network/publicIPAddresses",
                      "sku": {
                        "name": "Basic",
                        "tier": "Regional"
                      },
                      "name": "[variables('publicIPAddresses_docker_ip_name')]",
                      "apiVersion": "2018-02-01",
                      "location": "[parameters('location')]",
                      "scale": null,
                      "properties": {
                        "publicIPAddressVersion": "IPv4",
                        "publicIPAllocationMethod": "Dynamic",
                        "idleTimeoutInMinutes": 4,
                        "dnsSettings": {
                          "domainNameLabel": "[resourceGroup().name]"
                        },
                        "ipTags": []
                      },
                      "dependsOn": []
                    },
                    {
                      "type": "Microsoft.Network/virtualNetworks",
                      "name": "[variables('virtualNetworks_vnet_name')]",
                      "apiVersion": "2018-02-01",
                      "location": "[parameters('location')]",
                      "scale": null,
                      "properties": {
                        "addressSpace": {
                          "addressPrefixes": [
                            "10.0.0.0/24"
                          ]
                        },
                        "virtualNetworkPeerings": [],
                        "enableDdosProtection": false,
                        "enableVmProtection": false
                      },
                      "dependsOn": []
                    },
                    {
                      "type": "Microsoft.Network/virtualNetworks/subnets",
                      "name": "[concat(variables('virtualNetworks_vnet_name'), '/default')]",
                      "apiVersion": "2018-02-01",
                      "scale": null,
                      "properties": {
                        "addressPrefix": "10.0.0.0/24",
                        "serviceEndpoints": [
                          {
                            "service": "Microsoft.Storage",
                            "locations": [
                              "[parameters('location')]"
                            ]
                          }
                        ]
                      },
                      "dependsOn": [
                        "[variables('virtualNetworkId')]"
                      ]
                    },
                    {
                      "type": "Microsoft.Network/networkInterfaces",
                      "name": "[variables('networkInterfaces_name')]",
                      "apiVersion": "2018-04-01",
                      "location": "[parameters('location')]",
                      "properties": {
                        "ipConfigurations": [
                          {
                            "name": "ipconfig1",
                            "properties": {
                              "privateIpAddressVersion": "IPv4",
                              "privateIPAllocationMethod": "Dynamic",
                              "publicIPAddress": {
                                "id": "[variables('publicIPId')]"
                              },
                              "subnet": {
                                "id": "[variables('subnetId')]"
                              }
                            }
                          }
                        ],
                        "networksecuritygroup": {
                          "id": "[variables('networkSecurityGroupId')]"
                        }
                      },
                      "dependsOn": [
                        "[variables('publicIPId')]",
                        "[variables('subnetId')]",
                        "[variables('networkSecurityGroupId')]"
                      ]
                    },
                    {
                      "type": "Microsoft.EventHub/namespaces",
                      "sku": {
                        "name": "Standard",
                        "tier": "Standard",
                        "capacity": 1
                      },
                      "name": "[variables('eventhub_namespace_name')]",
                      "apiVersion": "2017-04-01",
                      "location": "[parameters('location')]",
                      "tags": {},
                      "scale": null,
                      "properties": {
                        "isAutoInflateEnabled": false,
                        "maximumThroughputUnits": 0
                      },
                      "dependsOn": []
                    },
                    {
                      "type": "Microsoft.EventHub/namespaces/AuthorizationRules",
                      "name": "[concat(variables('eventhub_namespace_name'), '/RootManageSharedAccessKey')]",
                      "apiVersion": "2017-04-01",
                      "location": "[parameters('location')]",
                      "scale": null,
                      "properties": {
                        "rights": [
                          "Listen",
                          "Manage",
                          "Send"
                        ]
                      },
                      "dependsOn": [
                        "[variables('eventhubNamespaceId')]"
                      ]
                    },
                    {
                      "type": "Microsoft.Devices/IoTHubs",
                      "sku": {
                        "name": "S1",
                        "tier": "Standard",
                        "capacity": 1
                      },
                      "name": "[variables('iothub_name')]",
                      "apiVersion": "2018-04-01",
                      "location": "[parameters('location')]",
                      "properties": {
                        "eventHubEndpoints": {
                          "events": {
                            "retentionTimeInDays": 1,
                            "partitionCount": 4
                          },
                          "operationsMonitoringEvents": {
                            "retentionTimeInDays": 1,
                            "partitionCount": 4
                          }
                        },
                        "messagingEndpoints": {
                          "fileNotifications": {
                            "lockDurationAsIso8601": "PT1M",
                            "ttlAsIso8601": "PT1H",
                            "maxDeliveryCount": 10
                          }
                        },
                        "enableFileUploadNotifications": false,
                        "cloudToDevice": {
                          "maxDeliveryCount": 10,
                          "defaultTtlAsIso8601": "PT1H",
                          "feedback": {
                            "lockDurationAsIso8601": "PT1M",
                            "ttlAsIso8601": "PT1H",
                            "maxDeliveryCount": 10
                          }
                        },
                        "features": "None"
                      },
                      "dependsOn": []
                    },
                    {
                      "type": "Microsoft.Web/serverfarms",
                      "sku": {
                        "name": "Y1",
                        "tier": "Dynamic",
                        "size": "Y1",
                        "family": "Y",
                        "capacity": 0
                      },
                      "kind": "functionapp",
                      "name": "[variables('plan_name')]",
                      "apiVersion": "2016-09-01",
                      "location": "West Europe",
                      "properties": {
                        "name": "[variables('plan_name')]"
                      },
                      "dependsOn": []
                    }
    ],
    "outputs": { }
}
